<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Amit Kumar</title>
 <link href="http://0.0.0.0:4000/blog/feeds/sympy.xml" rel="self"/>
 <link href="http://0.0.0.0:4000/blog"/>
 <updated>2017-03-20T00:43:24+05:30</updated>
 <id>http://0.0.0.0:4000</id>
 <author>
   <name>Amit Kumar</name>
   <email>dtu.amit@gmail.com</email>
 </author>

 
 <entry>
   <title>SymPy Workshop at FOSSASIA 2016, Singapore</title>
   <link href="http://0.0.0.0:4000/blog/sympy-workshop-fossasia-2016"/>
   <updated>2016-03-26T00:00:00+05:30</updated>
   <id>http://0.0.0.0:4000/blog/SymPy Workshop at FOSSASIA 2016, Singapore</id>
   <content type="html">&lt;p&gt;Hi there! Last week I went to &lt;a href=&quot;https://en.wikipedia.org/wiki/Singapore&quot;&gt;Singapore&lt;/a&gt; for &lt;a href=&quot;http://2016.fossasia.org/&quot;&gt;FOSSASIA&lt;/a&gt; Open Tech Summit  2016. I conducted a Worskhop on &lt;a href=&quot;http://sympy.org&quot;&gt;SymPy&lt;/a&gt; and assisted the &lt;a href=&quot;http://pydy.org&quot;&gt;PyDy&lt;/a&gt; Workshop in Python track hosted by &lt;a href=&quot;https://kushaldas.in/&quot;&gt;Kushal Das&lt;/a&gt;. This blog post accounts to my experience as a speaker, as a attendee at FOSSASIA and as a traveler to Singapore.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;About FOSSASIA&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img align=&quot;center&quot; src=&quot;/assets/fossasia.png&quot; width = &quot;200&quot;&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;FOSSASIA is the premier Free and Open Source technology event in Asia for developers, start-ups, and contributors. Projects at FOSSASIA range from open hardware, to design, graphics and software. FOSSASIA was established in 2009. Previous events took place in Cambodia and Vietnam.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As the name suggests its one of the largest tech conferences in Asia and my expectations were pretty high from this conference and moreover It was my first international conference. I witnessed lots of amazing people in the conference and interacted with a few as well. This is how it started: &lt;/br&gt;&lt;/p&gt;

&lt;p&gt;&lt;img align=&quot;center&quot; src=&quot;/assets/harish-fossasia.jpg&quot;  width = &quot;400&quot;&gt;&lt;/p&gt;

&lt;h2&gt;The SymPy/PyDy Workshop&lt;/h2&gt;

&lt;p&gt;Community is more important than Code @ Singapore Science Center Level 3, Pauling Lab
&lt;img align=&quot;center&quot; src=&quot;/assets/sympy-zen.jpg&quot; width = &quot;400&quot;&gt;&lt;/p&gt;

&lt;p&gt;The SymPy and PyDy workshop was scheduled on 20th March at 1:00 - 2:00 PM (PyDy) and 2:00 - 4:00 PM (SymPy). &lt;a href=&quot;http://www.moorepants.info/&quot;&gt;Jason&lt;/a&gt; suggested to conduct the SymPy workshop first since PyDy uses SymPy and it would be easier for people to learn SymPy first and then PyDy, but since the &lt;a href=&quot;http://2016.fossasia.org/schedule/&quot;&gt;schedule&lt;/a&gt; was already published, It was not possible to reschedule the workshops, so we had to continue with PyDy first.
&lt;a href=&quot;https://github.com/sahilshekhawat&quot;&gt;Sahil&lt;/a&gt; started the PyDy workshop at 1:00 PM, though we had to spend a lot of time installing Anaconda to everyone&amp;#39;s systems by creating a local server and distributing flash drives as most of the people didn&amp;#39;t had Anaconda or Canopy installed. This has been the problem for almost all the workshops I have conducted in the past. It seems I need to invent an efficient way to do this faster in future as we spent 30-40 odd minutes in installation. &lt;/br&gt;&lt;/p&gt;

&lt;p&gt;&lt;img align=&quot;center&quot; src=&quot;/assets/sympy-fossasia.jpg&quot; width = &quot;400&quot;&gt;&lt;/p&gt;

&lt;p&gt;Fortunately &lt;a href=&quot;https://github.com/sahilshekhawat&quot;&gt;Sahil&lt;/a&gt; finished his presentation at around 2:15 PM. Then I took over for SymPy workshop, I started with the basic introduction to SymPy, the slides can be found &lt;a href=&quot;http://slides.com/aktech/sympy&quot;&gt;here&lt;/a&gt;. Then I jumped to IPython notebook exercises to demonstrate more of SymPy. People were amazed by the capabilities of this amazing piece of software. The most beautiful feature they liked was printing and integration. The workshop went pretty well except for the glitches in the HDMI port of my laptop (probably, its the right time to get a new laptop). Here are some SymPy stickers for you, if you missed there.  &lt;/br&gt;&lt;/p&gt;

&lt;p&gt;&lt;img align=&quot;center&quot; src=&quot;/assets/sympy-sticker-fossasia.jpg&quot;  width = &quot;400&quot;&gt;&lt;/p&gt;

&lt;h2&gt;Singapore was Fun ;)&lt;/h2&gt;

&lt;p&gt;Visiting Singapore has been a great experience, the culture is a mix of &lt;a href=&quot;https://en.wikipedia.org/wiki/Malaysian&quot;&gt;Malaysian&lt;/a&gt;, Indian and native Singaporean. The City is well connected with &lt;a href=&quot;https://en.wikipedia.org/wiki/Mass_Rapid_Transit_(Singapore)&quot;&gt;MRT/SMRT&lt;/a&gt; (Metro and Buses). It&amp;#39;s quite easy get anywhere around the city. People here are very helpful and nice. I didn&amp;#39;t faced any problems throughout my stay there. I spent most of my time near &lt;a href=&quot;https://en.wikipedia.org/wiki/Science_Centre_Singapore&quot;&gt;Science Center&lt;/a&gt;, China Town and Little India. There were lot of people from India and particularly from Delhi and three from my University. It was awesome time spent with geeks all around. Tagging some of them &lt;a href=&quot;http://devmaany.co/&quot;&gt;Mayank&lt;/a&gt;, &lt;a href=&quot;http://www.ishankhanna.in/&quot;&gt;Ishaan&lt;/a&gt;, &lt;a href=&quot;http://omerjerk.in/&quot;&gt;Umair&lt;/a&gt;, &lt;a href=&quot;https://github.com/jig08&quot;&gt;Jigyasa&lt;/a&gt;, &lt;a href=&quot;http://iyask.me/&quot;&gt;Yask&lt;/a&gt;, &lt;a href=&quot;http://garvitdelhi.blogspot.in/&quot;&gt;Garvit&lt;/a&gt;, &lt;a href=&quot;http://home.iiitd.edu.in/%7Emanan13056/&quot;&gt;Manan&lt;/a&gt;, sorry If I missed someone. Here is a pic of the last day of the conference. &lt;/p&gt;

&lt;p&gt;&lt;img align=&quot;center&quot; src=&quot;/assets/fossasia-all.jpg&quot; width = &quot;400&quot;&gt;&lt;/p&gt;

&lt;h2&gt;Thank you!&lt;/h2&gt;

&lt;p&gt;Thank you FOSSASIA Organizing Team, Hong Phuc Dang for inviting me to be part of this awesome FOSS community.
I would not have been able to attend the conference without the generous financial support from SymPy, Thank you &lt;a href=&quot;http://www.ondrejcertik.com/&quot;&gt;Ondrej Certik&lt;/a&gt;, &lt;a href=&quot;http://asmeurer.github.io/blog/&quot;&gt;Aaron Meurer&lt;/a&gt; &amp;amp; SymPy contributors.&lt;/p&gt;

&lt;h3&gt;Good Bye!&lt;/h3&gt;

&lt;p&gt;Good bye! everyone, see you on my next blog post, meanwhile you can have a look at a Picture of me doing back flip at Sentosa ;)
&lt;img align=&quot;center&quot; src=&quot;/assets/amit-backflip.gif&quot;&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SymPy Workshop at PyDelhi Meetup</title>
   <link href="http://0.0.0.0:4000/blog/sympy-workshop-pydelhi-meetup"/>
   <updated>2016-02-07T00:00:00+05:30</updated>
   <id>http://0.0.0.0:4000/blog/SymPy Workshop at PyDelhi Meetup</id>
   <content type="html">&lt;p&gt;Hi there! It&amp;#39;s been sometime now since my last blog post, It&amp;#39;s probably the right time to write one now. Yesterday, I gave a talk on SymPy at Python Delhi User group Meetup at &lt;a href=&quot;https://maps.google.com/maps?f=q&amp;hl=en&amp;q=29%2C+Rajpur+Road%2C+Delhi%2C+in&quot;&gt;CSDS&lt;/a&gt;, New Delhi. Things never go the way you want, an hour was wasted in just setting up Anaconda on everyone&amp;#39;s system, eventually I had to cut on the material I could demonstrate, though It was nice to see that people were very enthusiatic about SymPy, they actively solved excercises. It was fun interacting with everyone.&lt;/p&gt;

&lt;p&gt;Here is a Pic of the Seminar room at CSDS:
&lt;img align=&quot;center&quot; src=&quot;/assets/sympy-workshop.jpg&quot;&gt;&lt;/p&gt;

&lt;p&gt;I should also admit that, I have increased my appetite for attending conferences and meetups, these days. In the last 4 months I have attended 3 Meetups (PyDelhi Meetup) and 1 Conference (PyCon India 2015). I think this is one of the best things I have done in last few years &amp;amp; I would recommend anyone with a slight interest in Python either Beginner or Expert should attend &lt;a href=&quot;http://www.pydelhi.org&quot;&gt;PyDelhi&lt;/a&gt; &lt;a href=&quot;http://www.meetup.com/pydelhi/events/&quot;&gt;Meetups&lt;/a&gt;. Looking forward to more such meetups and conferences.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/sympy-sticker.jpg&quot;&gt;&lt;/p&gt;

&lt;p&gt;I gave SymPy stickers to everyone who solved atleast one excercise (Since, I didn&amp;#39;t had enough stickers).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GSoC &#58; Throughout in SymPy &#35; Wrap Up</title>
   <link href="http://0.0.0.0:4000/blog/GSoC-wrap-up"/>
   <updated>2015-08-28T00:00:00+05:30</updated>
   <id>http://0.0.0.0:4000/blog/GSoC &#58; Throughout in SymPy &#35; Wrap Up</id>
   <content type="html">&lt;p&gt;Hi! I am Amit Kumar (&lt;a href=&quot;http://www.github.com/aktech&quot;&gt;&lt;strong&gt;@aktech&lt;/strong&gt;&lt;/a&gt;), a final year undergraduate student of Mathematics &amp;amp; Computing at Delhi Technological University. This post summarizes my experience working on GSoC Project on Improving Solvers in SymPy.&lt;/p&gt;

&lt;h2&gt;Introduction&lt;/h2&gt;

&lt;p&gt;I first stumbled upon SymPy last year, while looking for some Open Source Computer Algebra Systems to contribute. I didn&amp;#39;t had any Open Source experience by then, So SymPy was an Ideal Choice for getting into the beautiful world of Open Source. I wasn&amp;#39;t even Proficient in Python so at first it was little difficult for me, but Thanks! to the beauty of the language itself, which makes anyone comfortable with it in no time. Soon, I decided to participate into Google Summer of Code under SymPy. Though at this point of time, I didn&amp;#39;t had decided about the project, I would like to work in Summers. &lt;/p&gt;

&lt;h5&gt;First Contribution&lt;/h5&gt;

&lt;p&gt;I started learning the codebase &amp;amp; made my first contribution by Fixing an EasyToFix bug in &lt;code&gt;solvers.py&lt;/code&gt; through the PR &lt;a href=&quot;https://github.com/sympy/sympy/pull/8647&quot;&gt;#8647&lt;/a&gt;, Thanks to &lt;a href=&quot;&quot;&gt;@smichr&lt;/a&gt; for helping me making my first ever open source contribution. After my first PR, I started looking for more things to work and improve upon and I started commiting quite often. During this period I learnt the basics of Git, which is one of the most important tools for contributing to Open Source.&lt;/p&gt;

&lt;h2&gt;Project Ideas&lt;/h2&gt;

&lt;p&gt;When I got a bit comfortable with the basics of SymPy &amp;amp; contributing to open source in general, I decided to chose an area (module) to concentrate on. The modules I was interested in, were Solvers and Integrals, I was literally amazed by the capability of a CAS to integrate and solve equations. I decided to work on one of these in the summers. There was already some work done on the Integrals module in 2013, which was yet to be Merged. I wasn&amp;#39;t well versed about the Manuel Bronsteins works on Methods of Integration in a Computer Algebra System, so I was little skeptical about working on Integrals. The Solvers module attracted me due it&amp;#39;s awesome capabilities, I found it one of the most useful features of any Computer Algebra Systems, So I finally decided to work on Solvers Module.&lt;/p&gt;

&lt;h2&gt;Coding&lt;/h2&gt;

&lt;p&gt;I was finally accepted to work on Solvers this summer. I had my exams during the community bonding period, So I started almost in the first week of Coding Period. I made a detailed timeline of my work in summers, but through my experience I can say that&amp;#39;s seldom useful. Since, you never know what may come out in between you and your schedule. As an instance PR &lt;a href=&quot;https://github.com/sympy/sympy/pull/9540&quot;&gt;#9540&lt;/a&gt;, was a stumbling block in lot of my work, which was necessary to fix for proceeding ahead.&lt;/p&gt;

&lt;h4&gt;Phase I (Before Mid Terms)&lt;/h4&gt;

&lt;p&gt;When coding period commenced, I started implementing the &lt;code&gt;linsolve&lt;/code&gt;, the linear system solver which is tolerant to different input forms &amp;amp; can solve almost all forms of linear systems. At the start I got lot of reviews from Jason and Harsh, regarding improvement of the function. One of the most important thing I learnt which they focused on was Test Driven Development, they suggested me to write extensive tests before implementing the logic, which helps in reducing the problems in visualizing the final implementaion of the function and avoids API changes.&lt;/p&gt;

&lt;p&gt;After &lt;code&gt;linsolve&lt;/code&gt; I implemented &lt;code&gt;ComplexPlane&lt;/code&gt;, which is basically Complex Sets. It is useful for representing infinite solutions in argand plane. While implementing this I learnt that chosing the right API is one of the most important factors while designing aa important functionality. To know more about it, see my blog post &lt;a href=&quot;http://iamit.in/blog/GSoC-week-3/&quot;&gt;here&lt;/a&gt;. During this period I also worked on fixing Intersection&amp;#39;s of FiniteSet with symbolic elements, which was a stumbling block.&lt;/p&gt;

&lt;h4&gt;Phase II (After Mid Terms)&lt;/h4&gt;

&lt;p&gt;After successfully passing the Mid Terms, I started working more on robustness of &lt;code&gt;solveset&lt;/code&gt;, Thanks to @hargup for pointing out the motivation for this work. The idea is to tell the user about the domain of solution returned. Simplest motivation was the solution of the equation &lt;code&gt;|x| - n&lt;/code&gt;, for more info see my blog post &lt;a href=&quot;http://iamit.in/blog/GSoC-week-7/&quot;&gt;here&lt;/a&gt;. I also worked on various trivial and non trivial bugs which were more or less blocking my work. &lt;/p&gt;

&lt;p&gt;Then I started replacing &lt;code&gt;solve&lt;/code&gt; with &lt;code&gt;solveset&lt;/code&gt; in the codebase, the idea was to make a smooth transition between &lt;code&gt;solve&lt;/code&gt; and &lt;code&gt;solveset&lt;/code&gt;, while doing this Jason pointed out that I should not remove &lt;code&gt;solve&lt;/code&gt; tests, which can make &lt;code&gt;solve&lt;/code&gt; vunerable to break, So I reverted removing of solve tests. Later we decided to add &lt;code&gt;domain&lt;/code&gt; argument to &lt;code&gt;solveset&lt;/code&gt;, which would help the user in easily dictating to solveset about what solutions they are interested in, thanks to @shivamvats for doing this in a PR.
After the decision of adding &lt;code&gt;domain&lt;/code&gt; argument, Harsh figured out that, as of now &lt;code&gt;solveset&lt;/code&gt; is vunerable to API changes, so it&amp;#39;s not the right time to replace solve with solveset, so we decided to halt this work, as a result I closed my several PR&amp;#39;s unmerged. &lt;/p&gt;

&lt;p&gt;I also worked on Implementing Differential Calculus Method such as &lt;code&gt;is_increasing&lt;/code&gt; etc, which is also Merged now. Meanwhile I have been working on documenting &lt;code&gt;solveset&lt;/code&gt;, because a lot of people don&amp;#39;t know what we are doing &amp;amp; why we are doing, so It&amp;#39;s very important to answer all those subtle questions which may come up in there mind, So we decided to create a FAQ style documentation of &lt;code&gt;solveset&lt;/code&gt; see PR &lt;a href=&quot;https://github.com/sympy/sympy/pull/9500&quot;&gt;#9500&lt;/a&gt;. This is almost done, some polishing is needed. It would be Merged soon.&lt;/p&gt;

&lt;p&gt;During this period apart from my work, there are some other works as well which is worth mentioning, one of them is &lt;code&gt;ConditionSet&lt;/code&gt; by Harsh which serves the purpose of unevaluated solve object and even much more than that for our future endeavours with &lt;code&gt;solveset&lt;/code&gt;. Others being &lt;code&gt;codomain&lt;/code&gt; &amp;amp; &lt;code&gt;not_empty&lt;/code&gt; by Gaurav &lt;a href=&quot;http://github.com/gxyd&quot;&gt;@gxyd&lt;/a&gt; which are also important additions to SymPy.&lt;/p&gt;

&lt;h2&gt;Advice&lt;/h2&gt;

&lt;p&gt;TODO: Probably, this will need a comprehensive post, I would write soon.&lt;/p&gt;

&lt;h2&gt;Future Plans&lt;/h2&gt;

&lt;p&gt;Recently Harsh came up with an idea of tree based solver. Since now &lt;code&gt;ConditionSet&lt;/code&gt; has been introduced, the solving of equations can be seen as set transformation, We can do the following things to solve equations (abstract View):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Apply Various Set Transformations on the given Set.&lt;/li&gt;
&lt;li&gt;Define a Metric of the usability or define a notion of better solution over others.&lt;/li&gt;
&lt;li&gt;Different Transformation would be the nodes of the tree.&lt;/li&gt;
&lt;li&gt;Suitable searching techniques could be applied to get the best solution.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more info see mailing list thread &lt;a href=&quot;https://groups.google.com/forum/#!topic/sympy/-SIbX0AFL3Q&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As a part of this I worked on implementing a general decomposition function &lt;code&gt;decompogen&lt;/code&gt; in PR &lt;a href=&quot;https://github.com/sympy/sympy/pull/9831&quot;&gt;#9831&lt;/a&gt;, It&amp;#39;s almost done, will be merged soon.&lt;/p&gt;

&lt;p&gt;I plan for a long term association with SymPy, I take the full responsibilty of my code. I will try to contribute as much as I can particularly in sets and solvers module.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;On a concluding note, I must say that getting the opportunity to work on SymPy this summer has been one of the best things that could happen to me. Thanks to Harsh for helping me all my endeavour, also for being one of the best mentors I could get. I would like to thank Sean as well who from his busy schedule took up the time to attend meetings, hangouts and for doing code reviews. Also thanks to Chris Smith who is the most gentle and helpful person I have ever seen, he is one of the reasons I started contributing to SymPy.
Thanks to Aaron, Ondrej, and last but not the least my fellow GSoCer&amp;#39;s at SymPy &lt;a href=&quot;http://github.com/leosartaj&quot;&gt;leosartaj&lt;/a&gt;, &lt;a href=&quot;http://github.com/debugger22&quot;&gt;debugger22&lt;/a&gt;, &lt;a href=&quot;http://github.com/sumith1896&quot;&gt;sumith1896&lt;/a&gt;, &lt;a href=&quot;http://github.com/shivamvats&quot;&gt;shivamvats&lt;/a&gt;, &lt;a href=&quot;https://github.com/abinashmeher999&quot;&gt;abinashmeher999&lt;/a&gt;. Special Thanks to whole SymPy team and Community for a wonderful collaboration experience. Kudos!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GSoC &#58; This week in SymPy &#35;10 &amp; &#35;11</title>
   <link href="http://0.0.0.0:4000/blog/GSoC-week-10-11"/>
   <updated>2015-08-11T00:00:00+05:30</updated>
   <id>http://0.0.0.0:4000/blog/GSoC &#58; This week in SymPy &#35;10 &#38;11</id>
   <content type="html">&lt;p&gt;Hi there! It&amp;#39;s been 11 weeks into &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Summer_of_Code&quot;&gt;GSoC&lt;/a&gt; 
and we have reached into the last week before the soft deadline. Here is the Progress so far.&lt;/p&gt;

&lt;h3&gt;&amp;nbsp; &lt;strong&gt;Progress of Week 10 &amp;amp; 11&lt;/strong&gt; &lt;img style=&quot;float: left&quot; src=&quot;/assets/gsoc/pr.png&quot;&gt;&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;
Last couple of weeks, I worked mainly on the Documentation of the solveset module. It&amp;#39;s very important to let others know what we are doing and why we are doing, so this &lt;a href=&quot;http://github.com/sympy/sympy/pull/9500&quot;&gt;PR #9500&lt;/a&gt; is an effort to accomplish that.
Here are some of the important questions, I have tried to answer in the &lt;a href=&quot;http://github.com/sympy/sympy/pull/9500&quot;&gt;PR #9500&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;:check: What was the need of a new solvers module? &lt;/br&gt;
 :check: Why do we use sets as an output type? &lt;/br&gt;
 :check: What is this domain argument about? &lt;/br&gt;
 :check: What will you do with the old solve? &lt;/br&gt;
 :check: What are the general design principles behind the development of solveset? &lt;/br&gt;
 :check: What are the general methods employed by solveset to solve an equation? &lt;/br&gt;
 :check: How do we manipulate and return an infinite solutions? &lt;/br&gt;
 :check: How does solveset ensures that it is not returning any wrong solution? &lt;/br&gt;&lt;/p&gt;

&lt;p&gt;There is still some polishing required in this as suggested by &lt;a href=&quot;http://github.com/hargup&quot;&gt;@hargup&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;Linsolve Docs&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;I completed the documentation PR for &lt;code&gt;linsolve&lt;/code&gt;. See &lt;a href=&quot;https://github.com/sympy/sympy/pull/9587&quot;&gt;PR #9587&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;Differential Calculus Methods&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;I have also started working on the differential calculus methods as mentioned in my proposal &lt;a href=&quot;https://github.com/sympy/sympy/wiki/GSoC-2015-Application-AMiT-Kumar--Solvers-:-Extending-Solveset#week-12&quot;&gt;here&lt;/a&gt;.
See &lt;a href=&quot;https://github.com/aktech/sympy/tree/diff-cal&quot;&gt;diff-cal&lt;/a&gt; branch.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;from &lt;strong&gt;future&lt;/strong&gt; import plan&lt;/strong&gt;  Week #12:&lt;/h3&gt;

&lt;p&gt;This week I plan to finish up all the pending work and wrap up the project and get &lt;a href=&quot;http://github.com/sympy/sympy/pull/9500&quot;&gt;PR #9500&lt;/a&gt; Merged. &lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;$ git log&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9500&quot;&gt;PR #9500&lt;/a&gt; :  Documenting &lt;code&gt;solveset&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9587&quot;&gt;PR #9587&lt;/a&gt; : Add Linsolve Docs&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
That&amp;#39;s all for now, looking forward for week #12. :grinning:&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GSoC &#58; This week in SymPy &#35;9</title>
   <link href="http://0.0.0.0:4000/blog/GSoC-week-9"/>
   <updated>2015-07-28T00:00:00+05:30</updated>
   <id>http://0.0.0.0:4000/blog/GSoC &#58; This week in SymPy &#35;9</id>
   <content type="html">&lt;p&gt;Hi there! It&amp;#39;s been nine weeks into &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Summer_of_Code&quot;&gt;GSoC&lt;/a&gt;
. Here is the Progress for this week.&lt;/p&gt;

&lt;h3&gt;&amp;nbsp; &lt;strong&gt;Progress of Week 9&lt;/strong&gt; &lt;img style=&quot;float: left&quot; src=&quot;/assets/gsoc/pr.png&quot;&gt;&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;
This week I worked on Replacing &lt;code&gt;solve&lt;/code&gt; with &lt;code&gt;solveset&lt;/code&gt; or &lt;code&gt;linsolve&lt;/code&gt; in the codebase:
Here are the modules, I covered, as of now:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9740&quot;&gt;diffgeom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9718&quot;&gt;calculus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9724&quot;&gt;core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9743&quot;&gt;functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9744&quot;&gt;galgebra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9708&quot;&gt;geometry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9745&quot;&gt;ntheory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9738&quot;&gt;simplify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9717&quot;&gt;series&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9716&quot;&gt;sets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9710&quot;&gt;stats&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;github.com/moorepants&quot;&gt;@moorepants&lt;/a&gt; pointed out that I should not change old &lt;code&gt;solve&lt;/code&gt;tests, since people may break an untested code, this argument is valid, so I have added equivalent tests for &lt;code&gt;solveset&lt;/code&gt;, where it is competent with &lt;code&gt;solve&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There are some untested code in codebase as well, where &lt;code&gt;solve&lt;/code&gt; is used, for those cases replacing has not been done, as the tests would pass anyway, since those lines are not tested. So I have added a TODO for those instances, to replace with &lt;code&gt;solveset&lt;/code&gt;, when those lines are tested.&lt;/p&gt;

&lt;h4&gt;Other Work&lt;/h4&gt;

&lt;p&gt;I also changed the output of &lt;code&gt;linsolve&lt;/code&gt; when no solution are returned, earlier it throwed &lt;code&gt;ValueError&lt;/code&gt; &amp;amp; now it returns an &lt;code&gt;EmptySet()&lt;/code&gt;, which is consistent with rest of the &lt;code&gt;solveset&lt;/code&gt;. See &lt;a href=&quot;https://github.com/sympy/sympy/pull/9726&quot;&gt;PR #9726&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;from &lt;strong&gt;future&lt;/strong&gt; import plan&lt;/strong&gt;  Week #10:&lt;/h3&gt;

&lt;p&gt;This week I plan to Merge my pending PR&amp;#39;s on replacing old &lt;code&gt;solve&lt;/code&gt; in the code base with &lt;code&gt;solveset&lt;/code&gt;, and work on Documentation &amp;amp; &lt;code&gt;lambertw&lt;/code&gt; solver.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;$ git log&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9726&quot;&gt;PR #9726&lt;/a&gt; : Return EmptySet() if there are no solution to linear system &lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9724&quot;&gt;PR #9724&lt;/a&gt; : Replace solve with solveset in core&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9717&quot;&gt;PR #9717&lt;/a&gt; : Replace solve with solveset in sympy.calculus&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9716&quot;&gt;PR #9716&lt;/a&gt; : Use solveset instead of solve in sympy.sets&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9717&quot;&gt;PR #9717&lt;/a&gt; : Replace solve with solveset in &lt;code&gt;sympy.series&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9710&quot;&gt;PR #9710&lt;/a&gt; : Replace solve with solveset in &lt;code&gt;sympy.stats&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9708&quot;&gt;PR #9708&lt;/a&gt; : Use solveset instead of solve in &lt;code&gt;sympy.geometry&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9587&quot;&gt;PR #9587&lt;/a&gt; : Add Linsolve Docs&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9500&quot;&gt;PR #9500&lt;/a&gt; :  Documenting &lt;code&gt;solveset&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
That&amp;#39;s all for now, looking forward for week #10. :grinning:&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GSoC &#58; This week in SymPy &#35;8</title>
   <link href="http://0.0.0.0:4000/blog/GSoC-week-8"/>
   <updated>2015-07-21T00:00:00+05:30</updated>
   <id>http://0.0.0.0:4000/blog/GSoC &#58; This week in SymPy &#35;8</id>
   <content type="html">&lt;p&gt;Hi there! It&amp;#39;s been eight weeks into &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Summer_of_Code&quot;&gt;GSoC&lt;/a&gt;
. Here is the Progress for this week.&lt;/p&gt;

&lt;h3&gt;&amp;nbsp; &lt;strong&gt;Progress of Week 8&lt;/strong&gt; &lt;img style=&quot;float: left&quot; src=&quot;/assets/gsoc/pr.png&quot;&gt;&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;
This week, my PR for making &lt;code&gt;invert_real&lt;/code&gt; more robust was Merged, along with these:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9628&quot;&gt;PR #9628&lt;/a&gt; : Make &lt;code&gt;invert_real&lt;/code&gt; more robust&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9668&quot;&gt;PR #9668&lt;/a&gt; : Support solving for Dummy symbols in &lt;code&gt;linsolve&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9666&quot;&gt;PR #9666&lt;/a&gt; : Equate &lt;code&gt;S.Complexes&lt;/code&gt; with &lt;code&gt;ComplexPlane(S.Reals*S.Reals)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: We renamed &lt;code&gt;S.Complex&lt;/code&gt; to &lt;code&gt;S.Complexes&lt;/code&gt;, which is analogous with &lt;code&gt;S.Reals&lt;/code&gt; as suggested by &lt;a href=&quot;https://github.com/jksuom&quot;&gt;@jksuom&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I also opened &lt;a href=&quot;https://github.com/sympy/sympy/pull/9671&quot;&gt;PR #9671&lt;/a&gt; for Simplifying ComplexPlane output when ProductSet of FiniteSets are given as input: &lt;code&gt;ComplexPlane(FiniteSet(x)*FiniteSet(y))&lt;/code&gt;, It was earlier simplified to:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;ComplexPlane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It isn&amp;#39;t very useful to represent a point or discrete set of points in &lt;code&gt;ComplexPlane&lt;/code&gt; with an expression like above. So in the above PR it is now simplified as &lt;code&gt;FiniteSet&lt;/code&gt; of discrete points in &lt;code&gt;ComplexPlane&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ComplexPlane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FiniteSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FiniteSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It&amp;#39;s awaiting Merge, as of now.&lt;/p&gt;

&lt;p&gt;Now, I have started replacing &lt;code&gt;solve&lt;/code&gt; with &lt;code&gt;solveset&lt;/code&gt; and &lt;code&gt;linsolve&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;from &lt;strong&gt;future&lt;/strong&gt; import plan&lt;/strong&gt;  Week #9:&lt;/h3&gt;

&lt;p&gt;This week I plan to Merge my pending PR&amp;#39;s &amp;amp; work on replacing old &lt;code&gt;solve&lt;/code&gt; in the code base with &lt;code&gt;solveset&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;$ git log&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9710&quot;&gt;PR #9710&lt;/a&gt; : Replace solve with solveset in &lt;code&gt;sympy.stats&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9708&quot;&gt;PR #9708&lt;/a&gt; : Use solveset instead of solve in &lt;code&gt;sympy.geometry&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9671&quot;&gt;PR #9671&lt;/a&gt; : Simplify &lt;code&gt;ComplexPlane({x}*{y})&lt;/code&gt; to &lt;code&gt;FiniteSet(x + I*y)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9668&quot;&gt;PR #9668&lt;/a&gt; : Support solving for Dummy symbols in linsolve&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9666&quot;&gt;PR #9666&lt;/a&gt; : Equate S.Complexes with &lt;code&gt;ComplexPlane(S.Reals*S.Reals)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9628&quot;&gt;PR #9628&lt;/a&gt; : Make invert_real more robust&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9587&quot;&gt;PR #9587&lt;/a&gt; : Add Linsolve Docs&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9500&quot;&gt;PR #9500&lt;/a&gt; :  Documenting &lt;code&gt;solveset&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
That&amp;#39;s all for now, looking forward for week #9. :grinning:&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GSoC &#58; This week in SymPy &#35;7</title>
   <link href="http://0.0.0.0:4000/blog/GSoC-week-7"/>
   <updated>2015-07-15T00:00:00+05:30</updated>
   <id>http://0.0.0.0:4000/blog/GSoC &#58; This week in SymPy &#35;7</id>
   <content type="html">&lt;p&gt;Hi there! It&amp;#39;s been seven weeks into &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Summer_of_Code&quot;&gt;GSoC&lt;/a&gt;
and second half has started now. Here is the Progress so far.&lt;/p&gt;

&lt;h3&gt;&amp;nbsp; &lt;strong&gt;Progress of Week 7&lt;/strong&gt; &lt;img style=&quot;float: left&quot; src=&quot;/assets/gsoc/pr.png&quot;&gt;&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;
This week I Opened &lt;a href=&quot;https://github.com/sympy/sympy/pull/9628&quot;&gt;#9628&lt;/a&gt;, which is basically an attempt to make &lt;code&gt;solveset&lt;/code&gt; more robust, as I mentioned in my &lt;a href=&quot;http://iamit.in/blog/GSoC-week-6/&quot;&gt;last post&lt;/a&gt;.
The idea is to tell the user about the domain of solution returned.&lt;/p&gt;

&lt;p&gt;Now, It makes sure that n is positive, in the following example:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;real&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;real&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solveset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Intersection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;U&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Intersection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Otherwise it will return an &lt;code&gt;EmptySet()&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solveset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EmptySet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Earlier:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solveset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, for this to happen, we needed to make changes in the &lt;code&gt;invert_real&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;g_ys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g_ys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FiniteSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g_y&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g_y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g_ys&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g_y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_negative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_invert_real&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Union&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g_ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imageset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g_ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Union&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imageset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g_ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intersect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;imageset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g_ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intersect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))),&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, we applied set operations on the invert to make it return non-EmptySet only when there is a solution.&lt;/p&gt;

&lt;h3&gt;Now For more Complex Cases:&lt;/h3&gt;

&lt;p&gt;For the following case:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invert_real&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For the invert to be real, we must state that &lt;code&gt;a&lt;/code&gt; belongs to the Interval &lt;code&gt;(-oo, 2]&lt;/code&gt; otherwise it would be complex, but no set operation on &lt;code&gt;{log(-a + 2)/log(2)}&lt;/code&gt; can make the interval of &lt;code&gt;a&lt;/code&gt; to be in &lt;code&gt;(-oo, 2]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Although, it does returns an &lt;code&gt;EmptySet()&lt;/code&gt; on substituting absurd values:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solveset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EmptySet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, we need not make any changes to the &lt;code&gt;Pow&lt;/code&gt; handling in &lt;code&gt;invert_real&lt;/code&gt; &amp;amp; It&amp;#39;s almost done now, except for a couple of TODO&amp;#39;s:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Document new changes&lt;/li&gt;
&lt;li&gt;Add More tests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Though, I will wait for final thumbs up from &lt;a href=&quot;http://www.github.com/hargup&quot;&gt;@hargup&lt;/a&gt;, regarding this.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;from &lt;strong&gt;future&lt;/strong&gt; import plan&lt;/strong&gt;  Week #7:&lt;/h3&gt;

&lt;p&gt;This week I plan to complete &lt;a href=&quot;https://github.com/sympy/sympy/pull/9618&quot;&gt;PR #9628&lt;/a&gt; &amp;amp; get it Merged &amp;amp; start working on replacing old &lt;code&gt;solve&lt;/code&gt; in the code base with &lt;code&gt;solveset&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;$ git log&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Below is the list of other PR&amp;#39;s I worked on:&lt;/p&gt;

&lt;p&gt;&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9671&quot;&gt;PR #9671&lt;/a&gt; : Simplify &lt;code&gt;ComplexPlane({x}*{y})&lt;/code&gt; to &lt;code&gt;FiniteSet(x + I*y)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9668&quot;&gt;PR #9668&lt;/a&gt; : Support solving for Dummy symbols in linsolve&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9666&quot;&gt;PR #9666&lt;/a&gt; : Equate S.Complexes with &lt;code&gt;ComplexPlane(S.Reals*S.Reals)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9628&quot;&gt;PR #9628&lt;/a&gt; : [WIP] Make invert_real more robust&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9587&quot;&gt;PR #9587&lt;/a&gt; : Add Linsolve Docs&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9500&quot;&gt;PR #9500&lt;/a&gt; :  Documenting &lt;code&gt;solveset&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
That&amp;#39;s all for now, looking forward for week #8. :grinning:&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GSoC &#58; This week in SymPy &#35;6</title>
   <link href="http://0.0.0.0:4000/blog/GSoC-week-6"/>
   <updated>2015-07-06T00:00:00+05:30</updated>
   <id>http://0.0.0.0:4000/blog/GSoC &#58; This week in SymPy &#35;6</id>
   <content type="html">&lt;p&gt;Hi there! It&amp;#39;s been six weeks into &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Summer_of_Code&quot;&gt;GSoC&lt;/a&gt;,
and it marks the half of GSoC. The Mid term evaluations have been done now, Google has been preety quick doing this, I recieved the passing mail within 15 minutes after the deadline to fill up evaluations, so basically GSoC Admin did the following, (I guess):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GSoCStudents&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EvaluationResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;PASS&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SendThemMail&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(Don&amp;#39;t Judge my SQL, I am not good at it!)&lt;/p&gt;

&lt;h3&gt;&amp;nbsp; &lt;strong&gt;Progress of Week 6&lt;/strong&gt; &lt;img style=&quot;float: left&quot; src=&quot;/assets/gsoc/pr.png&quot;&gt;&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;
Last week my &lt;code&gt;Linsolve&lt;/code&gt; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9438&quot;&gt;PR #9438&lt;/a&gt;
finally got Merged Thanks! to &lt;a href=&quot;http://github.com/hargup&quot;&gt;@hargup&lt;/a&gt; &lt;a href=&quot;http://github.com/moorepants&quot;&gt;@moorepants&lt;/a&gt; &lt;a href=&quot;http://github.com/flacjacket&quot;&gt;@flacjacket&lt;/a&gt; &lt;a href=&quot;http://github.com/debugger22&quot;&gt;@debugger22&lt;/a&gt; for reviewing it and suggesting constructive changes.&lt;/p&gt;

&lt;p&gt;This week I worked on Intersection&amp;#39;s of &lt;code&gt;FiniteSet&lt;/code&gt; with symbolic elements, which was a blocking issue for lot of things, I managed to Fix the failing test which I mentioned in my last post. Eventually this PR got Merged as well, which has opened doors for lot of improvements.&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/jksuom&quot;&gt;@jksuom&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/hargup&quot;&gt;@hargup&lt;/a&gt; for iterating over this PR, and making some very useful comments for improving it to make it Mergeable.&lt;/p&gt;

&lt;p&gt;I had a couple of hangout meeting with &lt;a href=&quot;https://github.com/hargup&quot;&gt;@hargup&lt;/a&gt; this week, (though now he has left for SciPy for a couple of weeks), we discussed about the further plan, for making &lt;code&gt;solveset&lt;/code&gt; more robust, such as like returning the domain of invert while calling the &lt;code&gt;invert_real&lt;/code&gt; , See &lt;a href=&quot;https://github.com/sympy/sympy/issues/9617&quot;&gt;#9617&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Motivation for this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;real&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;real&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solveset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The solution returned above is not actually complete, unless, somehow we state &lt;code&gt;n&lt;/code&gt; should be positive for the output set to be non-Empty. See &lt;a href=&quot;https://github.com/sympy/sympy/issues/9588&quot;&gt;#9588&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;from &lt;strong&gt;future&lt;/strong&gt; import plan&lt;/strong&gt;  Week #7:&lt;/h3&gt;

&lt;p&gt;This week I plan to work on making &lt;code&gt;invert_real&lt;/code&gt; more robust.&lt;/p&gt;

&lt;p&gt;Relavant Issue:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sympy/sympy/issues/9617&quot;&gt;#9617&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sympy/sympy/issues/9588&quot;&gt;#9588&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;strong&gt;$ git log&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9618&quot;&gt;PR #9618&lt;/a&gt; : Add test for &lt;code&gt;solveset(x**2 + a, x)&lt;/code&gt; issue 9557&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9587&quot;&gt;PR #9587&lt;/a&gt; : Add Linsolve Docs&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9500&quot;&gt;PR #9500&lt;/a&gt; :  Documenting &lt;code&gt;solveset&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9612&quot;&gt;PR #9612&lt;/a&gt; : solveset return solution for &lt;code&gt;solveset(True, ..)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9540&quot;&gt;PR #9540&lt;/a&gt; : Intersection&amp;#39;s of FiniteSet with symbolic elements&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9438&quot;&gt;PR #9438&lt;/a&gt; : Linsolve&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9463&quot;&gt;PR #9463&lt;/a&gt; : ComplexPlane &lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img style=&quot;float: left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9527&quot;&gt;PR #9527&lt;/a&gt; : Printing of ProductSets  &lt;/br&gt; &lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img style=&quot;float: left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9524&quot;&gt;PR # 9524&lt;/a&gt; : Fix solveset returned solution making denom zero &lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
That&amp;#39;s all for now, looking forward for week #7. :grinning:&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GSoC &#58; This week in SymPy &#35;4 &amp; &#35;5</title>
   <link href="http://0.0.0.0:4000/blog/GSoC-week-4-5"/>
   <updated>2015-06-23T00:00:00+05:30</updated>
   <id>http://0.0.0.0:4000/blog/GSoC &#58; This week in SymPy &#35;4 &#38; 5</id>
   <content type="html">&lt;p&gt;Hi there! It&amp;#39;s been five weeks into &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Summer_of_Code&quot;&gt;GSoC&lt;/a&gt;, 
This week, I worked on polishing my previous PR&amp;#39;s to improve coverage and
fixing some bugs.&lt;/p&gt;

&lt;h3&gt;&amp;nbsp; &lt;strong&gt;Progress of Week 4 &amp;amp; 5&lt;/strong&gt; &lt;img style=&quot;float: left&quot; src=&quot;/assets/gsoc/pr.png&quot;&gt;&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;
During the last couple of weeks my &lt;code&gt;ComplexPlane&lt;/code&gt; Class &lt;a href=&quot;https://github.com/sympy/sympy/pull/9463&quot;&gt;PR #9438&lt;/a&gt;
finally got &lt;strong&gt;&lt;em&gt;Merged&lt;/em&gt;&lt;/strong&gt; thanks to &lt;a href=&quot;http://github.com/hargup&quot;&gt;Harsh&lt;/a&gt; for thoroughly reviewing it and suggesting constructive changes.&lt;/p&gt;

&lt;p&gt;For this I Managed to improve it&amp;#39;s coverage to perfect 100%, which is indeed satisfying, as it depicts all the new code being pushed is completely tested.&lt;/p&gt;

&lt;p&gt;This week I also improved the Exception handling and coverage in my &lt;code&gt;linsolve&lt;/code&gt; &lt;a href=&quot;https://github.com/sympy/sympy/pull/&quot;&gt;PR&lt;/a&gt;, It also have a 100% coverage.&lt;/p&gt;

&lt;h3&gt;Coverage Report&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; [1] &lt;code&gt;gauss_jordan_solve&lt;/code&gt; &lt;strong&gt;100 %&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt; [2] &lt;code&gt;linsolve&lt;/code&gt; : &lt;strong&gt;100: %&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Ref:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;[1] &lt;a href=&quot;http://iamit.in/sympy/coverage-report/matrices/&quot;&gt;http://iamit.in/sympy/coverage-report/matrices/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[2] &lt;a href=&quot;http://iamit.in/sympy/coverage-report/solveset/&quot;&gt;http://iamit.in/sympy/coverage-report/solveset/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It&amp;#39;s good to be Merged now.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Blocking Issue&lt;/strong&gt;: Intersection&amp;#39;s of FiniteSet with symbolic elements&lt;/h3&gt;

&lt;p&gt;During Week 5, While working on transcendental equation solver in &lt;code&gt;solveset.py&lt;/code&gt;, I discovered a blocking issue in &lt;code&gt;FiniteSets&lt;/code&gt;, which is with the Intersection of &lt;code&gt;FiniteSet&lt;/code&gt; containing symbolic elements, for example:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;real&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FiniteSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intersect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Reals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EmptySet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Currently, either &lt;code&gt;FiniteSet&lt;/code&gt; is able to evaluate intersection otherwise it, returns an &lt;code&gt;EmptySet()&lt;/code&gt;.
(See &lt;a href=&quot;https://github.com/sympy/sympy/issues/9536&quot;&gt;9536&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/sympy/sympy/issues/8217&quot;&gt;8217&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;To fix this, I have opened the PR &lt;a href=&quot;https://github.com/sympy/sympy/pull/9540&quot;&gt;#9540&lt;/a&gt;.
Currently It fixes both the issues (&lt;a href=&quot;https://github.com/sympy/sympy/issues/9536&quot;&gt;9536&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/sympy/sympy/issues/8217&quot;&gt;8217&lt;/a&gt;), but there are some failing tests using the current behaviour of &lt;code&gt;FiniteSet&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;For example:&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;symbols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;x y z&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FiniteSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FiniteSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;In Master:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intersect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;It should rather be:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intersect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;U&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Intersection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The current behavior of FiniteSet in Master is non-acceptable, since in the above example &lt;code&gt;x, y, z&lt;/code&gt; are integer symbols, so they can be any integer, but in the &lt;em&gt;Master&lt;/em&gt; , they are assumed to be distinct, which is wrong.
There are such failing tests in &lt;code&gt;test_wester.py&lt;/code&gt; &lt;a href=&quot;https://github.com/sympy/sympy/blob/master/sympy/core/tests/test_wester.py#L74&quot;&gt;here&lt;/a&gt;, which is updated here: &lt;a href=&quot;https://github.com/aktech/sympy/commit/e8e6a0bb9285c315e9bade2bcd10b954760d4965&quot;&gt;aktech@e8e6a0b&lt;/a&gt; to incorporate with the right behaviour.&lt;/p&gt;

&lt;p&gt;As of now there are a couple of failing tests, which needs to passed, before we can &lt;strong&gt;Merge&lt;/strong&gt; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9540&quot;&gt;#9540&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;TODO Failing Tests:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://travis-ci.org/sympy/sympy/jobs/67831123&quot;&gt;sympy/stats/tests/test_rv.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://travis-ci.org/sympy/sympy/jobs/67831130&quot;&gt;sympy/combinatorics/tests/test_partitions.py&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;strong&gt;from &lt;strong&gt;future&lt;/strong&gt; import plan&lt;/strong&gt;  Week #6:&lt;/h3&gt;

&lt;p&gt;This week I plan to &lt;a href=&quot;https://github.com/sympy/sympy/pull/9540&quot;&gt;Fix Intersection&amp;#39;s of FiniteSet with symbolic elements&lt;/a&gt; &amp;amp; start working on &lt;code&gt;LambertW&lt;/code&gt; solver in &lt;code&gt;solveset&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;$ git log&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9540&quot;&gt;PR #9540&lt;/a&gt; : Intersection&amp;#39;s of FiniteSet with symbolic elements&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9438&quot;&gt;PR #9438&lt;/a&gt; : Linsolve&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9463&quot;&gt;PR #9463&lt;/a&gt; : ComplexPlane &lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img style=&quot;float: left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9527&quot;&gt;PR #9527&lt;/a&gt; : Printing of ProductSets  &lt;/br&gt; &lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img style=&quot;float: left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9524&quot;&gt;PR # 9524&lt;/a&gt; : Fix solveset returned solution making denom zero &lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
That&amp;#39;s all for now, looking forward for week #6. :grinning:&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GSoC &#58; This week in SymPy &#35;3</title>
   <link href="http://0.0.0.0:4000/blog/GSoC-week-3"/>
   <updated>2015-06-17T00:00:00+05:30</updated>
   <id>http://0.0.0.0:4000/blog/GSoC &#58; This week in SymPy &#35;3</id>
   <content type="html">&lt;p&gt;Hi there! It&amp;#39;s been three weeks into &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Summer_of_Code&quot;&gt;GSoC&lt;/a&gt;, &amp;amp; I have managed to get some pace.
This week, I worked on creating &lt;code&gt;ComplexPlane&lt;/code&gt; Class.&lt;/p&gt;

&lt;h3&gt;&amp;nbsp; &lt;strong&gt;Progress of Week 3&lt;/strong&gt; &lt;img style=&quot;float: left&quot; src=&quot;/assets/gsoc/pr.png&quot;&gt;&lt;/h3&gt;

&lt;p&gt;The major portion of this week went onto creating &lt;code&gt;ComplexPlane&lt;/code&gt; Class. &lt;/br&gt;
&lt;a href=&quot;https://github.com/sympy/sympy/pull/9463&quot;&gt;PR #9438&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Design&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The design for the ComplexPlane class supports both forms of representation of Complex regions in &lt;a href=&quot;https://en.wikipedia.org/wiki/Complex_plane&quot;&gt;Complex Plane.&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Polar form&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Polar form is where a complex number is denoted by the &lt;em&gt;length&lt;/em&gt; (&lt;strong&gt;&lt;em&gt;r&lt;/em&gt;&lt;/strong&gt;) (otherwise known as the magnitude, absolute value, or modulus) and the &lt;em&gt;angle&lt;/em&gt; (&lt;strong&gt;&lt;em&gt;θ&lt;/em&gt;&lt;/strong&gt;) of its vector.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Rectangular form&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Rectangular form, on the other hand, is where a complex number is denoted by its respective &lt;em&gt;horizontal&lt;/em&gt; (&lt;strong&gt;&lt;em&gt;x&lt;/em&gt;&lt;/strong&gt;) and &lt;em&gt;vertical&lt;/em&gt; (&lt;strong&gt;&lt;em&gt;y&lt;/em&gt;&lt;/strong&gt;) components. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/gsoc/complex_repr.png&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Initial Approach&lt;/h3&gt;

&lt;p&gt;While writing code for &lt;code&gt;ComplexPlane&lt;/code&gt; class, we started with the following design: 
Input &lt;a href=&quot;https://en.wikipedia.org/wiki/Interval_(mathematics)&quot;&gt;Interval&lt;/a&gt; of a and b interval, as following:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;ComplexPlane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a_interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b_interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;polar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where &lt;code&gt;a_interval&lt;/code&gt; &amp;amp; &lt;code&gt;b_interval&lt;/code&gt; are the respective intervals of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; for complex number in rectangular form or the respective intervals of &lt;code&gt;r&lt;/code&gt; and &lt;code&gt;θ&lt;/code&gt; for complex number in polar form when polar flag is True.&lt;/p&gt;

&lt;p&gt;But the &lt;strong&gt;&lt;em&gt;problem&lt;/em&gt;&lt;/strong&gt; with this approach is that &lt;strong&gt;&lt;em&gt;we can&amp;#39;t represent two different regions in a single&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;ComplexPlane&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;call&lt;/em&gt;&lt;/strong&gt;, i.e. , for example let say we have two rectangular regions be represented as follows:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/gsoc/complex_rect.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;We have to represent this with two&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;ComplexPlane&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;calls:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;rect1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ComplexPlane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rect2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ComplexPlane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;shaded_region&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Union&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rect1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rect2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Similiary for, the following polar region:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/gsoc/complex_polar.png&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;halfdisk1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ComplexPlane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;polar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;halfdisk2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ComplexPlane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                         &lt;span class=&quot;n&quot;&gt;polar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;shaded_region&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Union&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;halfdisk1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;halfdisk2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Better Approach&lt;/h3&gt;

&lt;p&gt;The &lt;strong&gt;&lt;em&gt;solution&lt;/em&gt;&lt;/strong&gt; to the above problem is to &lt;strong&gt;&lt;em&gt;wrap up two calls of&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;ComplexPlane&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;into one&lt;/em&gt;&lt;/strong&gt;. To do this, a better input API was needed, and the problem was solved with the help of &lt;strong&gt;&lt;code&gt;ProductSet&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now we take input in the form of &lt;a href=&quot;http://mathworld.wolfram.com/ProductSet.html&quot;&gt;&lt;code&gt;ProductSet&lt;/code&gt;&lt;/a&gt; or Union of ProductSets:&lt;/p&gt;

&lt;p&gt;The region above is represented as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For Rectangular Form&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;psets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Union&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;shaded_region&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ComplexPlane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;psets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;For Polar Form&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;psets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Union&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;shaded_region&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ComplexPlane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;psets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;polar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/strong&gt;
The input &lt;code&gt;θ&lt;/code&gt; interval for polar form tolerates any interval in terms of &lt;code&gt;π&lt;/code&gt; , it is handled by the function &lt;code&gt;normalize_theta_set&lt;/code&gt; (wrote using &lt;code&gt;_pi_coeff&lt;/code&gt; function), It normalizes &lt;code&gt;θ&lt;/code&gt; set to an equivalent interval in &lt;code&gt;[0, 2π)&lt;/code&gt;, which simplifies various other methods such as &lt;code&gt;_union&lt;/code&gt;, &lt;code&gt;_intersect&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;from &lt;strong&gt;future&lt;/strong&gt; import plan&lt;/strong&gt;  Week #4:&lt;/h3&gt;

&lt;p&gt;This week I plan to polish my pending PR&amp;#39;s to get them Merged &amp;amp; start working on &lt;code&gt;LambertW&lt;/code&gt; solver in &lt;code&gt;solveset&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;$ git log&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9438&quot;&gt;PR #9438&lt;/a&gt; : Linsolve&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img align=&quot;left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9463&quot;&gt;PR #9463&lt;/a&gt; : ComplexPlane &lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img style=&quot;float: left&quot; src=&quot;/assets/gsoc/opr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9527&quot;&gt;PR #9527&lt;/a&gt; : Printing of ProductSets  &lt;/br&gt; &lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img style=&quot;float: left&quot; src=&quot;/assets/gsoc/mpr.png&quot;&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/sympy/sympy/pull/9524&quot;&gt;PR # 9524&lt;/a&gt; : Fix solveset returned solution making denom zero &lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
That&amp;#39;s all for now, looking forward for week #4. :grinning:&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GSoC &#58; This week in SymPy &#35;2</title>
   <link href="http://0.0.0.0:4000/blog/GSoC-week-2"/>
   <updated>2015-06-07T00:00:00+05:30</updated>
   <id>http://0.0.0.0:4000/blog/GSoC &#58; This week in SymPy &#35;2 </id>
   <content type="html">&lt;p&gt;Hi there! It&amp;#39;s been two weeks into GSoC, &amp;amp; I have managed to flip some bits.&lt;/p&gt;

&lt;p&gt;This week, I started working on &lt;code&gt;ComplexPlane&lt;/code&gt; Class, &amp;amp; also worked on improving &lt;code&gt;linsolve&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Progress of Week 2&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/gsoc/pr.png&quot;&gt; &lt;/p&gt;

&lt;p&gt;The major portion of this week went into improving &lt;code&gt;linsolve&lt;/code&gt; function, which I wrote last week, 
PR : &lt;strong&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9438&quot;&gt;#9438&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.github.com/moorepants&quot;&gt;Jason&lt;/a&gt; suggested to let the Matrix code be the core source for all linear solve operations (i.e. remove all algorithmic solve code from everywhere else in sympy). Then for any linear solve stuff that can&amp;#39;t be handled by the Matrix code base, implement that here in &lt;code&gt;linsolve&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It was indeed a good idea, since solving linear system is more of Matrix stuff than that of solvers in CAS, So we introduced a new solver in &lt;code&gt;matrices.py&lt;/code&gt; named as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gauss_jordan_solve()&lt;/code&gt; : It solves &lt;code&gt;Ax = b&lt;/code&gt; using Gauss Jordan elimination.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There may be zero, one, or infinite solutions.  If one solution
exists, it will be returned. If infinite solutions exist, it will
be returned parametrically in terms of Dummy parameters. If no solutions exist, It will throw
ValueError.&lt;/p&gt;

&lt;p&gt;Now &lt;code&gt;linsolve&lt;/code&gt; is a light wrapper around &lt;code&gt;gauss_jordan_solve()&lt;/code&gt; method, it basically converts all the input types into the standard A &amp;amp; b form &amp;amp; calls A.gauss&lt;em&gt;jordan&lt;/em&gt;solve() and replaces the dummy parameters with the symbols input by the user.&lt;/p&gt;

&lt;h3&gt;Plan for Week 3:&lt;/h3&gt;

&lt;p&gt;This week I plan to complete ComplexPlane class &amp;amp; get the following PR&amp;#39;s Merged:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9438&quot;&gt;PR #9438&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9463&quot;&gt;PR #9463&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That&amp;#39;s all for now, looking forward for week #3.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GSoC &#58; This week in SymPy &#35;1</title>
   <link href="http://0.0.0.0:4000/blog/GSoC-week-1"/>
   <updated>2015-06-01T00:00:00+05:30</updated>
   <id>http://0.0.0.0:4000/blog/GSoC &#58; This week in SymPy &#35;1</id>
   <content type="html">&lt;p&gt;Hi there! The First week of the coding period has came to an end, this week has been very hectic for me due to my practicals and Minor project submission at college, though I mananged to reach the goal for this week.&lt;/p&gt;

&lt;p&gt;This week, I worked on Linear system solver &lt;code&gt;linsolve&lt;/code&gt; in the &lt;code&gt;solveset&lt;/code&gt; Module, as I mentioned in my last &lt;a href=&quot;http://iamit.in/blog/GSoC-Getting-Up-For-the-Coding-Period/&quot;&gt;post&lt;/a&gt;, about my goals for Week 1. &lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Progress of Week 1&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/gsoc/pr.png&quot;&gt; I implemented the following two functions: &lt;/br&gt;
PR : &lt;strong&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9438&quot;&gt;#9438&lt;/a&gt;&lt;/strong&gt;.
It&amp;#39;s almost good to merge after a final review by &lt;a href=&quot;http://www.github.com/flacjacket&quot;&gt;flacjacket&lt;/a&gt; &amp;amp; &lt;a href=&quot;http://www.github.com/hargup&quot;&gt;hargup&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;linear_eq_to_matrix&lt;/code&gt;&lt;/strong&gt; : &lt;em&gt;method to convert system of linear Equations to Matrix Form.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;linsolve&lt;/code&gt;&lt;/strong&gt;: &lt;em&gt;It&amp;#39;s the General Linear System solver.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;http://www.github.com/moorepants&quot;&gt;Jason&lt;/a&gt; for reviewing my initial implementation &amp;amp; suggesting useful changes.&lt;/p&gt;

&lt;h3&gt;Algorithm Used&lt;/h3&gt;

&lt;p&gt;The algorithm used in &lt;code&gt;linsolve&lt;/code&gt; is Gauss-Jordan elimination, which results, after elimination, in an reduced row echelon form matrix. (used &lt;code&gt;rref()&lt;/code&gt; method of matrices)&lt;/p&gt;

&lt;h3&gt;Capabilities of Linsolve&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;linsolve&lt;/code&gt; is a powerful linear system solver, It can solve all types of linear systems, accepted in all input forms, hence providing a user friendly Public API. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;under-determined&lt;/em&gt;&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linsolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]:{(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;well-behaved&lt;/em&gt;&lt;/strong&gt;: &lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Eqns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linsolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Eqns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]:{(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;over-determined&lt;/em&gt;&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Parametrized solution&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linsolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]:{(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# No solution&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linsolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;....&lt;/span&gt;
&lt;span class=&quot;ne&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Linear&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solution&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;The input formats supported:&lt;/br&gt;&lt;/h3&gt;

&lt;p&gt;(as mentioned in my last &lt;a href=&quot;http://iamit.in/blog/GSoC-Getting-Up-For-the-Coding-Period/&quot;&gt;post&lt;/a&gt;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Augmented Matrix Form&lt;/li&gt;
&lt;li&gt;List Of Equations Form&lt;/li&gt;
&lt;li&gt;Input A &amp;amp; b Matrix Form (from &lt;code&gt;Ax = b&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Plan for Week 2:&lt;/h3&gt;

&lt;p&gt;This week I plan to work on Complex Sets.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s all for now, looking forward for week #2.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GSoC &#58; Getting Up For the Coding Period</title>
   <link href="http://0.0.0.0:4000/blog/GSoC-Getting-Up-For-the-Coding-Period"/>
   <updated>2015-05-24T00:00:00+05:30</updated>
   <id>http://0.0.0.0:4000/blog/GSoC &#58; Getting-Up-For-the-Coding-Period </id>
   <content type="html">&lt;h3&gt;&lt;strong&gt;The Start of Coding Period!&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The Community bonding Period is close to end now &amp;amp; my Exams as well. Tomorrow starts the Coding Period &amp;amp; I have been waiting for it for some time now. &lt;/p&gt;

&lt;p&gt;Recently I gave a quick look to my Proposed Timeline in my &lt;a href=&quot;https://github.com/sympy/sympy/wiki/GSoC-2015-Application-AMiT-Kumar--Solvers-:-Extending-Solveset#timeline&quot;&gt;Proposal&lt;/a&gt;, &amp;amp;  decided to swap the 2nd Week&amp;#39;s work with Ist, this will help me securing few credits in my College&amp;#39;s Minor Project Submission (Which has the deadline of 30th May).&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Plan for Week 1&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;This week, I am planning to work on Solving Linear systems in &lt;code&gt;solveset&lt;/code&gt;. (Currently solveset support univariate solvers only).&lt;/p&gt;

&lt;p&gt;The main functions, I would be implementing are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;eq_to_matrix&lt;/code&gt; :
&lt;em&gt;method to convert system of Equations to Matrix Form.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;linsolve&lt;/code&gt;: &lt;em&gt;It&amp;#39;s the General Linear System solver.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As mentioned in the proposal, Solving system of linear equations is an important feature of solvers in a CAS. Most of the CAS have a convenient single function to solve linear systems, for example &lt;code&gt;LinearSolve&lt;/code&gt; in Mathematica.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;&lt;code&gt;linsolve&lt;/code&gt;&lt;/strong&gt; which I would be implementing is inspired from Matlab &amp;amp; Maxima.&lt;/p&gt;

&lt;h5&gt;&lt;strong&gt;Features Overview&lt;/strong&gt;&lt;/h5&gt;

&lt;p&gt;We have a lot of reusable code in &lt;code&gt;sympy.matrices&lt;/code&gt;  &amp;amp; &lt;code&gt;sympy.solvers.solvers&lt;/code&gt;, which would be quite useful.
One of the most important thing I would like to have in &lt;code&gt;linsolve&lt;/code&gt; is supporting a lot of input formats.
Though, most of the CAS suport only one input format. This feature would be quite useful for sympy&amp;#39;s &lt;code&gt;linsolve&lt;/code&gt;.&lt;/p&gt;

&lt;h6&gt;The three most common input formats, I can recall as of now are:&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;Augmented Matrix Form&lt;/li&gt;
&lt;li&gt;List Of Equations Form&lt;/li&gt;
&lt;li&gt;Input A &amp;amp; b Matrix Form (from &lt;code&gt;Ax = b&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It would be great to have all three input formats supported in the Public API &lt;code&gt;linsolve&lt;/code&gt; Method.&lt;/p&gt;

&lt;p&gt;Looking forward for Coding Period, that&amp;#39;s all for now.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Google Summer Of Code with SymPy</title>
   <link href="http://0.0.0.0:4000/blog/Google-Summer-Of-Code-with-SymPy"/>
   <updated>2015-04-28T00:00:00+05:30</updated>
   <id>http://0.0.0.0:4000/blog/Google-Summer-Of-Code-with-SymPy</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/gsoc/GSOC2015.png&quot; alt=&quot;GSoC 2015&quot;&gt;&lt;/p&gt;

&lt;p&gt;Yay! the much awaited results of &lt;a href=&quot;http://www.google-melange.com/gsoc/projects/list/google/gsoc2015&quot;&gt;Google Summer Of Code&lt;/a&gt; is out now, and I have been selected to work with &lt;a href=&quot;http://www.sympy.org/&quot;&gt;SymPy&lt;/a&gt; under &lt;a href=&quot;https://www.python.org/psf/&quot;&gt;Python Software Foundation.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;For those who don&amp;#39;t know about GSoC&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Google_Summer_of_Code&quot;&gt;Google Summer of Code&lt;/a&gt;&lt;/strong&gt; is a global program that offers students stipends to write code for open source projects.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;A bit about SymPy&lt;/h3&gt;

&lt;p&gt;&lt;img style=&quot;float: right&quot; src=&quot;/assets/gsoc/sympy.png&quot;&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;SymPy is a Python library for symbolic mathematics. It aims to become a full-featured &lt;strong&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Computer_algebra_system&quot;&gt;Computer Algebra System&lt;/a&gt;&lt;/strong&gt; (CAS) while keeping the code as simple as possible in order to be comprehensible and easily extensible.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;About My Project&lt;/h3&gt;

&lt;p&gt;My Project is being mentored by some really awesome guys &lt;a href=&quot;https://github.com/certik&quot;&gt;Ondřej Čertík&lt;/a&gt;, &lt;a href=&quot;https://github.com/flacjacket&quot;&gt;Sean Vig&lt;/a&gt; and &lt;a href=&quot;https://github.com/hargup&quot;&gt;Harsh Gupta&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Project aims at improving the current Equation solvers in SymPy. The Current solve is a huge mess, It needs to be broken into various sub-hints, to make the code more robust, modular, and approachable for developers, moving in lines of the new API, as developed in solveset. Currently the new API is implemented for univariate Equations only, we need to incorporate it for linear systems, multivariate equations &amp;amp; transcendental by rewriting the solvers for these in the new solveset Module.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sympy/sympy/wiki/GSoC-2015-Application-AMiT-Kumar--Solvers-:-Extending-Solveset&quot;&gt;Here is my Proposal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Looking forward for a great summer with SymPy!&lt;/p&gt;
</content>
 </entry>
 

</feed>